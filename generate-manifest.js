#!/usr/bin/env node

/**
 * Skrypt do automatycznego generowania pliku manifest.json
 * na podstawie zawarto≈õci folder√≥w /data/quizzes i /data/workouts
 * 
 * U≈ºycie: node generate-manifest.js
 */

const fs = require('fs');
const path = require('path');

// ≈öcie≈ºki do folder√≥w
const DATA_DIR = path.join(__dirname, 'data');
const QUIZZES_DIR = path.join(DATA_DIR, 'quizzes');
const WORKOUTS_DIR = path.join(DATA_DIR, 'workouts');
const MANIFEST_PATH = path.join(DATA_DIR, 'manifest.json');

/**
 * Pobiera listƒô plik√≥w JSON z danego folderu
 */
function getJsonFiles(dir) {
  try {
    if (!fs.existsSync(dir)) {
      console.warn(`‚ö†Ô∏è  Folder ${dir} nie istnieje. Tworzƒô...`);
      fs.mkdirSync(dir, { recursive: true });
      return [];
    }

    const files = fs.readdirSync(dir);
    return files
      .filter(file => file.endsWith('.json'))
      .sort(); // Sortowanie alfabetyczne
  } catch (error) {
    console.error(`‚ùå B≈ÇƒÖd podczas odczytu folderu ${dir}:`, error.message);
    return [];
  }
}

/**
 * Generuje manifest
 */
function generateManifest() {
  console.log('üîç Szukam plik√≥w JSON...\n');

  const quizzes = getJsonFiles(QUIZZES_DIR);
  const workouts = getJsonFiles(WORKOUTS_DIR);

  console.log(`üìù Znaleziono quiz√≥w: ${quizzes.length}`);
  quizzes.forEach(file => console.log(`   - ${file}`));
  
  console.log(`\nüí™ Znaleziono trening√≥w: ${workouts.length}`);
  workouts.forEach(file => console.log(`   - ${file}`));

  const manifest = {
    quizzes,
    workouts,
    generatedAt: new Date().toISOString()
  };

  try {
    fs.writeFileSync(
      MANIFEST_PATH,
      JSON.stringify(manifest, null, 2),
      'utf8'
    );
    console.log(`\n‚úÖ Manifest wygenerowany pomy≈õlnie: ${MANIFEST_PATH}`);
  } catch (error) {
    console.error(`\n‚ùå B≈ÇƒÖd podczas zapisu manifestu:`, error.message);
    process.exit(1);
  }
}

// Uruchom
generateManifest();

